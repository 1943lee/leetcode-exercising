/*n=numRows
Δ=2n-2    1                           2n-1                         4n-3
Δ=        2                     2n-2  2n                    4n-4   4n-2
Δ=        3               2n-3        2n+1              4n-5       .
Δ=        .           .               .               .            .
Δ=        .       n+2                 .           3n               .
Δ=        n-1 n+1                     3n-3    3n-1                 5n-5
Δ=2n-2    n                           3n-2                         5n-4
*/
//题意如上图

//根据原始数据，按照波浪顺序，纵向求解
public String convert(String s, int numRows) {
		char[] c = s.toCharArray();
		int len = c.length;
		StringBuffer[] sb = new StringBuffer[numRows];
		for (int i = 0; i < sb.length; i++) sb[i] = new StringBuffer();

		int i = 0;
		while (i < len) {
			for (int idx = 0; idx < numRows && i < len; idx++) // vertically down
				sb[idx].append(c[i++]);
			for (int idx = numRows-2; idx >= 1 && i < len; idx--) // obliquely up
				sb[idx].append(c[i++]);
		}
		for (int idx = 1; idx < sb.length; idx++)
			sb[0].append(sb[idx]);
		return sb[0].toString();
	}

// 横向画图求解
	//https://segmentfault.com/a/1190000005751185
	public String convertOther(String s, int numRows) {
		if (numRows == 1)
			return s;
		StringBuilder sb = new StringBuilder();
		int magic = numRows * 2 - 2;
		int initialDistance = magic;
		for (int i = 0; i < numRows; i++) {
			fill(sb, i, initialDistance, magic, s);
			initialDistance = initialDistance - 2; //对应思路讲解第5条
		}
		return sb.toString();
	}

	public void fill(StringBuilder sb, int start, int initialDistance, int magic, String s) {
		StringBuffer outStr = new StringBuffer();
		for(int i=start;i>0;i--) {
			outStr.append(" ");
		}
		while (start < s.length()) {
			if (initialDistance == 0)    //对应思路讲解第6条
				initialDistance = magic;
			outStr.append(s.charAt(start));
			for(int i=initialDistance;i>1;i--) {
				outStr.append(" ");
			}
			sb.append(s.charAt(start));
			start = start + initialDistance;
			initialDistance = magic - initialDistance;//对应思路讲解第4条
		}
		System.out.println(outStr.toString());
	}